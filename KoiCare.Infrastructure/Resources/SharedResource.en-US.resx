<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Wrong email or password" xml:space="preserve">
    <value>Wrong email or password</value>
  </data>
  <data name="User created successfully" xml:space="preserve">
    <value>User created successfully</value>
  </data>
  <data name="Email already exists" xml:space="preserve">
    <value>Email already exists</value>
  </data>
  <data name="Firebase register return null" xml:space="preserve">
    <value>Firebase register return null</value>
  </data>
  <data name="Cannot create admin user" xml:space="preserve">
    <value>Cannot create admin user</value>
  </data>
  <data name="Login successfully" xml:space="preserve">
    <value>Login successfully</value>
  </data>
  <data name="Invalid refresh token" xml:space="preserve">
    <value>Invalid refresh token</value>
  </data>
  <data name="Token refreshed" xml:space="preserve">
    <value>Token refreshed</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="Error in validation" xml:space="preserve">
    <value>Error in validation</value>
  </data>
  <data name="Pond not found" xml:space="preserve">
    <value>Pond not found</value>
  </data>
  <data name="You are not allowed to update this pond" xml:space="preserve">
    <value>You are not allowed to update this pond</value>
  </data>
  <data name="Pond saved successfully" xml:space="preserve">
    <value>Pond saved successfully</value>
  </data>
  <data name="Name is required" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Length is required" xml:space="preserve">
    <value>Length is required</value>
  </data>
  <data name="Length is greater than 0" xml:space="preserve">
    <value>Length is greater than 0</value>
  </data>
  <data name="Width is required" xml:space="preserve">
    <value>Width is required</value>
  </data>
  <data name="Width is greater than 0" xml:space="preserve">
    <value>Width is greater than 0</value>
  </data>
  <data name="Depth is required" xml:space="preserve">
    <value>Depth is required</value>
  </data>
  <data name="Depth is greater than 0" xml:space="preserve">
    <value>Depth is greater than 0</value>
  </data>
  <data name="Volume is required" xml:space="preserve">
    <value>Volume is required</value>
  </data>
  <data name="Volume is greater than 0" xml:space="preserve">
    <value>Volume is greater than 0</value>
  </data>
  <data name="Drainage count is required" xml:space="preserve">
    <value>Drainage count is required</value>
  </data>
  <data name="Drainage count is greater than 0" xml:space="preserve">
    <value>Drainage count is greater than 0</value>
  </data>
  <data name="Pump capacity is required" xml:space="preserve">
    <value>Pump capacity is required</value>
  </data>
  <data name="Pump capacity is greater than 0" xml:space="preserve">
    <value>Pump capacity is greater than 0</value>
  </data>
  <data name="Feeding schedule not found" xml:space="preserve">
    <value>Feeding schedule not found</value>
  </data>
  <data name="Error getting feeding schedule" xml:space="preserve">
    <value>Error getting feeding schedule</value>
  </data>
  <data name="Feeding schedule created successfully" xml:space="preserve">
    <value>Feeding schedule created successfully</value>
  </data>
  <data name="Amount must be greater than 0" xml:space="preserve">
    <value>Amount must be greater than 0</value>
  </data>
  <data name="Period must be greater than 0" xml:space="preserve">
    <value>Period must be greater than 0</value>
  </data>
  <data name="Feeding schedule updated successfully" xml:space="preserve">
    <value>Feeding schedule updated successfully</value>
  </data>
  <data name="Error updating feeding schedule" xml:space="preserve">
    <value>Error updating feeding schedule</value>
  </data>
  <data name="Feed calculation created successfully" xml:space="preserve">
    <value>Feed calculation created successfully</value>
  </data>
  <data name="Error creating feed calculation" xml:space="preserve">
    <value>Error creating feed calculation</value>
  </data>
  <data name="Feeding calculation not found" xml:space="preserve">
    <value>Feeding calculation not found</value>
  </data>
  <data name="Koi fish not found" xml:space="preserve">
    <value>Koi fish not found</value>
  </data>
  <data name="Koi fish created successfully" xml:space="preserve">
    <value>Koi fish created successfully</value>
  </data>
  <data name="Update koi fish successfully" xml:space="preserve">
    <value>Update koi fish successfully</value>
  </data>
  <data name="Category does not exist" xml:space="preserve">
    <value>Category does not exist</value>
  </data>
  <data name="Blog post created successfully" xml:space="preserve">
    <value>Blog post created successfully</value>
  </data>
  <data name="User must be logged in to create a blog post" xml:space="preserve">
    <value>User must be logged in to create a blog post</value>
  </data>
  <data name="Blog deleted successfully" xml:space="preserve">
    <value>Blog deleted successfully</value>
  </data>
  <data name="Blog not found" xml:space="preserve">
    <value>Blog not found</value>
  </data>
  <data name="Blog updated successfully" xml:space="preserve">
    <value>Blog updated successfully</value>
  </data>
  <data name="Koi growth create successfully" xml:space="preserve">
    <value>Koi growth create successfully</value>
  </data>
  <data name="Koi growth information does not exist" xml:space="preserve">
    <value>Koi growth information does not exist</value>
  </data>
  <data name="Update koi growth successfully" xml:space="preserve">
    <value>Update koi growth successfully</value>
  </data>
  <data name="Koi growth information deleted successfully" xml:space="preserve">
    <value>Koi growth information deleted successfully</value>
  </data>
</root>